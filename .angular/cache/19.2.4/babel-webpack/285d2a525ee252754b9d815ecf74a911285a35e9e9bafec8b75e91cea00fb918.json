{"ast":null,"code":"import _asyncToGenerator from \"/Users/shaurya.singh/Desktop/To-Do List/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./supabase.service\";\nexport class AuthService {\n  supabaseService;\n  currentUserSubject = new BehaviorSubject(null);\n  currentUser$ = this.currentUserSubject.asObservable();\n  constructor(supabaseService) {\n    this.supabaseService = supabaseService;\n    this.supabaseService.getSupabaseClient().auth.onAuthStateChange((event, session) => {\n      this.currentUserSubject.next(session?.user ?? null);\n    });\n  }\n  signUp(email, password) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const {\n          error\n        } = yield _this.supabaseService.getSupabaseClient().auth.signUp({\n          email,\n          password\n        });\n        if (error) throw error;\n        return {\n          success: true\n        };\n      } catch (error) {\n        return {\n          success: false,\n          error: error.message\n        };\n      }\n    })();\n  }\n  signIn(email, password) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const {\n          error\n        } = yield _this2.supabaseService.getSupabaseClient().auth.signInWithPassword({\n          email,\n          password\n        });\n        if (error) throw error;\n        return {\n          success: true\n        };\n      } catch (error) {\n        return {\n          success: false,\n          error: error.message\n        };\n      }\n    })();\n  }\n  signOut() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const {\n          error\n        } = yield _this3.supabaseService.getSupabaseClient().auth.signOut();\n        if (error) throw error;\n        return {\n          success: true\n        };\n      } catch (error) {\n        return {\n          success: false,\n          error: error.message\n        };\n      }\n    })();\n  }\n  getCurrentUser() {\n    return this.currentUserSubject.value;\n  }\n  static ɵfac = function AuthService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AuthService)(i0.ɵɵinject(i1.SupabaseService));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","AuthService","supabaseService","currentUserSubject","currentUser$","asObservable","constructor","getSupabaseClient","auth","onAuthStateChange","event","session","next","user","signUp","email","password","_this","_asyncToGenerator","error","success","message","signIn","_this2","signInWithPassword","signOut","_this3","getCurrentUser","value","i0","ɵɵinject","i1","SupabaseService","factory","ɵfac","providedIn"],"sources":["/Users/shaurya.singh/Desktop/To-Do List/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { SupabaseService } from './supabase.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { User } from '@supabase/supabase-js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private currentUserSubject = new BehaviorSubject<User | null>(null);\n  public currentUser$ = this.currentUserSubject.asObservable();\n\n  constructor(private supabaseService: SupabaseService) {\n    this.supabaseService.getSupabaseClient().auth.onAuthStateChange((event, session) => {\n      this.currentUserSubject.next(session?.user ?? null);\n    });\n  }\n\n  async signUp(email: string, password: string): Promise<{ success: boolean; error?: string }> {\n    try {\n      const { error } = await this.supabaseService.getSupabaseClient().auth.signUp({\n        email,\n        password,\n      });\n      if (error) throw error;\n      return { success: true };\n    } catch (error: any) {\n      return { success: false, error: error.message };\n    }\n  }\n\n  async signIn(email: string, password: string): Promise<{ success: boolean; error?: string }> {\n    try {\n      const { error } = await this.supabaseService.getSupabaseClient().auth.signInWithPassword({\n        email,\n        password,\n      });\n      if (error) throw error;\n      return { success: true };\n    } catch (error: any) {\n      return { success: false, error: error.message };\n    }\n  }\n\n  async signOut(): Promise<{ success: boolean; error?: string }> {\n    try {\n      const { error } = await this.supabaseService.getSupabaseClient().auth.signOut();\n      if (error) throw error;\n      return { success: true };\n    } catch (error: any) {\n      return { success: false, error: error.message };\n    }\n  }\n\n  getCurrentUser(): User | null {\n    return this.currentUserSubject.value;\n  }\n} "],"mappings":";AAEA,SAASA,eAAe,QAAoB,MAAM;;;AAMlD,OAAM,MAAOC,WAAW;EAIFC,eAAA;EAHZC,kBAAkB,GAAG,IAAIH,eAAe,CAAc,IAAI,CAAC;EAC5DI,YAAY,GAAG,IAAI,CAACD,kBAAkB,CAACE,YAAY,EAAE;EAE5DC,YAAoBJ,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;IACjC,IAAI,CAACA,eAAe,CAACK,iBAAiB,EAAE,CAACC,IAAI,CAACC,iBAAiB,CAAC,CAACC,KAAK,EAAEC,OAAO,KAAI;MACjF,IAAI,CAACR,kBAAkB,CAACS,IAAI,CAACD,OAAO,EAAEE,IAAI,IAAI,IAAI,CAAC;IACrD,CAAC,CAAC;EACJ;EAEMC,MAAMA,CAACC,KAAa,EAAEC,QAAgB;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC1C,IAAI;QACF,MAAM;UAAEC;QAAK,CAAE,SAASF,KAAI,CAACf,eAAe,CAACK,iBAAiB,EAAE,CAACC,IAAI,CAACM,MAAM,CAAC;UAC3EC,KAAK;UACLC;SACD,CAAC;QACF,IAAIG,KAAK,EAAE,MAAMA,KAAK;QACtB,OAAO;UAAEC,OAAO,EAAE;QAAI,CAAE;MAC1B,CAAC,CAAC,OAAOD,KAAU,EAAE;QACnB,OAAO;UAAEC,OAAO,EAAE,KAAK;UAAED,KAAK,EAAEA,KAAK,CAACE;QAAO,CAAE;MACjD;IAAC;EACH;EAEMC,MAAMA,CAACP,KAAa,EAAEC,QAAgB;IAAA,IAAAO,MAAA;IAAA,OAAAL,iBAAA;MAC1C,IAAI;QACF,MAAM;UAAEC;QAAK,CAAE,SAASI,MAAI,CAACrB,eAAe,CAACK,iBAAiB,EAAE,CAACC,IAAI,CAACgB,kBAAkB,CAAC;UACvFT,KAAK;UACLC;SACD,CAAC;QACF,IAAIG,KAAK,EAAE,MAAMA,KAAK;QACtB,OAAO;UAAEC,OAAO,EAAE;QAAI,CAAE;MAC1B,CAAC,CAAC,OAAOD,KAAU,EAAE;QACnB,OAAO;UAAEC,OAAO,EAAE,KAAK;UAAED,KAAK,EAAEA,KAAK,CAACE;QAAO,CAAE;MACjD;IAAC;EACH;EAEMI,OAAOA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAR,iBAAA;MACX,IAAI;QACF,MAAM;UAAEC;QAAK,CAAE,SAASO,MAAI,CAACxB,eAAe,CAACK,iBAAiB,EAAE,CAACC,IAAI,CAACiB,OAAO,EAAE;QAC/E,IAAIN,KAAK,EAAE,MAAMA,KAAK;QACtB,OAAO;UAAEC,OAAO,EAAE;QAAI,CAAE;MAC1B,CAAC,CAAC,OAAOD,KAAU,EAAE;QACnB,OAAO;UAAEC,OAAO,EAAE,KAAK;UAAED,KAAK,EAAEA,KAAK,CAACE;QAAO,CAAE;MACjD;IAAC;EACH;EAEAM,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACxB,kBAAkB,CAACyB,KAAK;EACtC;;qCAhDW3B,WAAW,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,eAAA;EAAA;;WAAX/B,WAAW;IAAAgC,OAAA,EAAXhC,WAAW,CAAAiC,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}